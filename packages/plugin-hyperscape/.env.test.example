# Hyperscape Plugin Test Environment Configuration
# Copy this file to .env.test and fill in your actual values

# ============================================================================
# HYPERSCAPE WORLD CONNECTION
# ============================================================================

# Required: URL of the test Hyperscape world
# Format: https://hyperscape.io/world-id OR http://localhost:3000/world-id
HYPERSCAPE_TEST_WORLD=https://hyperscape.io/your-test-world-id

# Optional: Authentication token for the test world (if required)
HYPERSCAPE_AUTH_TOKEN=your-auth-token-here

# ============================================================================
# OPENAI CONFIGURATION (Required for character intelligence)
# ============================================================================

# Required: OpenAI API key for GPT-4 access
OPENAI_API_KEY=sk-proj-your-openai-api-key-here

# ============================================================================
# SQL DATABASE CONFIGURATION (Required per ElizaOS methodology)
# ============================================================================

# Database adapter type: 'sqlite' (local) or 'postgres' (production)
DATABASE_ADAPTER=sqlite

# SQLite path (for local testing)
SQLITE_FILE=./test-data/timber.db

# PostgreSQL connection (if using postgres adapter)
# POSTGRES_URL=postgresql://user:password@localhost:5432/hyperscape_test

# ============================================================================
# OPTIONAL: OLLAMA FALLBACK (for local testing without OpenAI)
# ============================================================================

# Uncomment to enable Ollama as local LLM fallback
# OLLAMA_API_ENDPOINT=http://localhost:11434

# ============================================================================
# TEST CONFIGURATION
# ============================================================================

# Enable verbose logging for debugging
LOG_LEVEL=debug

# Test timeout (milliseconds) - tests will fail if they exceed this
TEST_TIMEOUT=30000

# Number of retries for flaky tests
TEST_RETRIES=0
