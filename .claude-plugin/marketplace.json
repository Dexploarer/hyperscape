{
  "name": "hyperscape-dev",
  "version": "2.0.0",
  "description": "Hyperscape AI-powered 3D multiplayer game development plugin for Claude Code",
  "displayName": "Hyperscape Development Plugin",
  "icon": "🎮",
  "author": {
    "name": "Hyperscape Team",
    "email": "team@hyperscape.ai",
    "url": "https://github.com/HyperscapeAI"
  },
  "homepage": "https://github.com/HyperscapeAI/hyperscape",
  "repository": {
    "type": "git",
    "url": "https://github.com/HyperscapeAI/hyperscape"
  },
  "bugs": {
    "url": "https://github.com/HyperscapeAI/hyperscape/issues"
  },
  "license": "UNLICENSED",
  "categories": [
    "Game Development",
    "AI Agents",
    "Testing",
    "3D Graphics",
    "TypeScript"
  ],
  "tags": [
    "hyperscape",
    "elizaos",
    "3d",
    "game-dev",
    "ai-agents",
    "testing",
    "threejs",
    "multiplayer",
    "rpg"
  ],
  "keywords": [
    "hyperscape",
    "eliza",
    "ai-agents",
    "3d-engine",
    "multiplayer",
    "rpg",
    "testing",
    "playwright",
    "typescript"
  ],
  "engines": {
    "claude-code": ">=2.0.0",
    "node": ">=20.0.0"
  },
  "compatibility": {
    "platforms": ["darwin", "linux", "win32"],
    "conflicts": [],
    "dependencies": []
  },
  "commands": [
    {
      "name": "test-rpg",
      "path": "commands/test-rpg.md",
      "description": "Run RPG action tests with real Hyperscape instance",
      "category": "testing"
    },
    {
      "name": "test-visual",
      "path": "commands/test-visual.md",
      "description": "Run visual tests with colored cube proxies",
      "category": "testing"
    },
    {
      "name": "run-agent",
      "path": "commands/run-agent.md",
      "description": "Launch a test agent in Hyperscape world",
      "category": "testing"
    },
    {
      "name": "check-types",
      "path": "commands/check-types.md",
      "description": "Validate TypeScript strong typing rules",
      "category": "development"
    },
    {
      "name": "build-plugin",
      "path": "commands/build-plugin.md",
      "description": "Build plugin-hyperscape with optional watch mode",
      "category": "development"
    },
    {
      "name": "create-action",
      "path": "commands/create-action.md",
      "description": "Generate new ElizaOS action with tests",
      "category": "development"
    },
    {
      "name": "analyze-errors",
      "path": "commands/analyze-errors.md",
      "description": "Analyze error logs and suggest fixes",
      "category": "analysis"
    },
    {
      "name": "extract-memories",
      "path": "commands/extract-memories.md",
      "description": "Extract memories and rules from chat history",
      "category": "analysis"
    }
  ],
  "agents": [
    {
      "name": "rpg-action-developer",
      "path": "agents/rpg-action-developer.md",
      "description": "Specialized in RPG action implementation and ElizaOS patterns",
      "category": "development"
    },
    {
      "name": "hyperscape-test-engineer",
      "path": "agents/hyperscape-test-engineer.md",
      "description": "Expert in real-world testing with Playwright and visual verification",
      "category": "testing"
    },
    {
      "name": "typescript-enforcer",
      "path": "agents/typescript-enforcer.md",
      "description": "Strong typing validator ensuring no any/unknown types",
      "category": "quality"
    },
    {
      "name": "visual-test-analyst",
      "path": "agents/visual-test-analyst.md",
      "description": "Screenshot analysis and colored cube proxy expert",
      "category": "testing"
    }
  ],
  "mcp_servers": {
    "hyperscape-dev": {
      "transport": "stdio",
      "command": "node",
      "args": ["mcp/dist/server.js"],
      "env": {
        "HYPERSCAPE_PROJECT_ROOT": "${workspaceFolder}",
        "OPENAI_API_KEY": "${OPENAI_API_KEY}",
        "ANTHROPIC_API_KEY": "${ANTHROPIC_API_KEY}"
      },
      "description": "MCP server providing Hyperscape development tools"
    }
  },
  "hooks": {
    "PreToolUse": {
      "Write": {
        "command": "bash",
        "args": ["hooks/validate-write.sh", "${filePath}"],
        "description": "Validate file writes follow project conventions",
        "timeout": 5000
      },
      "Edit": {
        "command": "bash",
        "args": ["hooks/validate-write.sh", "${filePath}"],
        "description": "Validate file edits follow project conventions",
        "timeout": 5000
      }
    },
    "PostToolUse": {
      "Bash": {
        "command": "bash",
        "args": ["hooks/post-test.sh"],
        "matcher": "test",
        "description": "Collect test results and logs",
        "timeout": 10000
      }
    },
    "SessionStart": {
      "command": "echo",
      "args": ["🚀 Hyperscape Development Plugin v2.0 loaded - Ready for RPG development!"],
      "description": "Welcome message with version"
    },
    "SessionEnd": {
      "command": "echo",
      "args": ["👋 Hyperscape Development Plugin session ended. Run /extract-memories to save learnings!"],
      "description": "Reminder to extract memories at session end"
    }
  },
  "settings": {
    "permissions": {
      "allow": [
        "Bash(cd packages/plugin-hyperscape*)",
        "Bash(bun run *)",
        "Bash(bun test *)",
        "Bash(npm run *)",
        "Bash(node *)",
        "Bash(grep *)",
        "Read(packages/plugin-hyperscape/**)",
        "Write(packages/plugin-hyperscape/src/**/*.ts)",
        "Edit(packages/plugin-hyperscape/src/**/*.ts)",
        "Glob(packages/plugin-hyperscape/**)"
      ],
      "deny": [
        "Write(packages/plugin-hyperscape/node_modules/**)",
        "Edit(packages/plugin-hyperscape/node_modules/**)",
        "Bash(rm -rf *)"
      ]
    },
    "rules": {
      "typescript": {
        "noAny": true,
        "noUnknown": true,
        "explicitReturnTypes": true
      },
      "testing": {
        "noMocks": true,
        "realWorlds": true,
        "visualVerification": true
      },
      "fileManagement": {
        "preferEditing": true,
        "noVersionedFiles": true,
        "cleanupOrphans": true
      }
    }
  },
  "documentation": {
    "readme": "README.md",
    "installation": "INSTALL.md",
    "usage": "USAGE.md",
    "changelog": "CHANGELOG.md",
    "architecture": "ARCHITECTURE.md",
    "contributing": "CONTRIBUTING.md"
  },
  "features": [
    "🔧 MCP server with 9 specialized development tools (v2.0)",
    "⌨️  8 slash commands for common workflows",
    "🤖 4 specialized AI agents for domain expertise",
    "🪝 Custom hooks for code quality and testing",
    "🧠 Automated memory extraction from chat history",
    "📋 Rule generation from development sessions",
    "🎯 TypeScript strong typing validation",
    "🎨 Visual testing with colored cube proxies",
    "🤖 Multi-agent testing support",
    "📊 Error log analysis and suggestions",
    "⚡ Action scaffolding generator",
    "📈 Performance monitoring and caching"
  ],
  "requirements": {
    "node": ">=20.0.0",
    "bun": ">=1.0.0",
    "typescript": ">=5.9.0"
  },
  "setup": {
    "install": [
      "cd .claude-plugin/mcp && npm install && npm run build",
      "cd .claude-plugin/memory-tools && npm install && npm run build"
    ],
    "configure": [
      "Set ANTHROPIC_API_KEY environment variable",
      "Set HYPERSCAPE_PROJECT_ROOT to workspace folder"
    ]
  }
}
